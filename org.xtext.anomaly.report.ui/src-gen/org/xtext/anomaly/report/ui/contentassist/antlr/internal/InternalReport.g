/*
* generated by Xtext
*/
grammar InternalReport;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.anomaly.report.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.anomaly.report.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.anomaly.report.services.ReportGrammarAccess;

}

@parser::members {
 
 	private ReportGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ReportGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleReport
entryRuleReport 
:
{ before(grammarAccess.getReportRule()); }
	 ruleReport
{ after(grammarAccess.getReportRule()); } 
	 EOF 
;

// Rule Report
ruleReport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReportAccess().getAnomaliesAssignment()); }
(rule__Report__AnomaliesAssignment)*
{ after(grammarAccess.getReportAccess().getAnomaliesAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnomaly
entryRuleAnomaly 
:
{ before(grammarAccess.getAnomalyRule()); }
	 ruleAnomaly
{ after(grammarAccess.getAnomalyRule()); } 
	 EOF 
;

// Rule Anomaly
ruleAnomaly
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnomalyAccess().getAlternatives()); }
(rule__Anomaly__Alternatives)
{ after(grammarAccess.getAnomalyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleShadowing
entryRuleShadowing 
:
{ before(grammarAccess.getShadowingRule()); }
	 ruleShadowing
{ after(grammarAccess.getShadowingRule()); } 
	 EOF 
;

// Rule Shadowing
ruleShadowing
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getShadowingAccess().getGroup()); }
(rule__Shadowing__Group__0)
{ after(grammarAccess.getShadowingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompleteness
entryRuleCompleteness 
:
{ before(grammarAccess.getCompletenessRule()); }
	 ruleCompleteness
{ after(grammarAccess.getCompletenessRule()); } 
	 EOF 
;

// Rule Completeness
ruleCompleteness
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompletenessAccess().getGroup()); }
(rule__Completeness__Group__0)
{ after(grammarAccess.getCompletenessAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRedundancy
entryRuleRedundancy 
:
{ before(grammarAccess.getRedundancyRule()); }
	 ruleRedundancy
{ after(grammarAccess.getRedundancyRule()); } 
	 EOF 
;

// Rule Redundancy
ruleRedundancy
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRedundancyAccess().getGroup()); }
(rule__Redundancy__Group__0)
{ after(grammarAccess.getRedundancyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSyntactical
entryRuleSyntactical 
:
{ before(grammarAccess.getSyntacticalRule()); }
	 ruleSyntactical
{ after(grammarAccess.getSyntacticalRule()); } 
	 EOF 
;

// Rule Syntactical
ruleSyntactical
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSyntacticalAccess().getGroup()); }
(rule__Syntactical__Group__0)
{ after(grammarAccess.getSyntacticalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReachability
entryRuleReachability 
:
{ before(grammarAccess.getReachabilityRule()); }
	 ruleReachability
{ after(grammarAccess.getReachabilityRule()); } 
	 EOF 
;

// Rule Reachability
ruleReachability
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReachabilityAccess().getGroup()); }
(rule__Reachability__Group__0)
{ after(grammarAccess.getReachabilityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Anomaly__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnomalyAccess().getShadowingParserRuleCall_0()); }
	ruleShadowing
{ after(grammarAccess.getAnomalyAccess().getShadowingParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAnomalyAccess().getCompletenessParserRuleCall_1()); }
	ruleCompleteness
{ after(grammarAccess.getAnomalyAccess().getCompletenessParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAnomalyAccess().getRedundancyParserRuleCall_2()); }
	ruleRedundancy
{ after(grammarAccess.getAnomalyAccess().getRedundancyParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAnomalyAccess().getSyntacticalParserRuleCall_3()); }
	ruleSyntactical
{ after(grammarAccess.getAnomalyAccess().getSyntacticalParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getAnomalyAccess().getReachabilityParserRuleCall_4()); }
	ruleReachability
{ after(grammarAccess.getAnomalyAccess().getReachabilityParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Shadowing__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Shadowing__Group__0__Impl
	rule__Shadowing__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shadowing__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShadowingAccess().getShadowingKeyword_0()); }

	'Shadowing' 

{ after(grammarAccess.getShadowingAccess().getShadowingKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Shadowing__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Shadowing__Group__1__Impl
	rule__Shadowing__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Shadowing__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShadowingAccess().getDescriptionAssignment_1()); }
(rule__Shadowing__DescriptionAssignment_1)
{ after(grammarAccess.getShadowingAccess().getDescriptionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Shadowing__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Shadowing__Group__2__Impl
	rule__Shadowing__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Shadowing__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShadowingAccess().getShadowingAssignment_2()); }
(rule__Shadowing__ShadowingAssignment_2)
{ after(grammarAccess.getShadowingAccess().getShadowingAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Shadowing__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Shadowing__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shadowing__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShadowingAccess().getShadowedAssignment_3()); }
(rule__Shadowing__ShadowedAssignment_3)
{ after(grammarAccess.getShadowingAccess().getShadowedAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Completeness__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Completeness__Group__0__Impl
	rule__Completeness__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Completeness__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompletenessAccess().getCompletenessKeyword_0()); }

	'Completeness' 

{ after(grammarAccess.getCompletenessAccess().getCompletenessKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Completeness__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Completeness__Group__1__Impl
	rule__Completeness__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Completeness__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompletenessAccess().getDescriptionAssignment_1()); }
(rule__Completeness__DescriptionAssignment_1)
{ after(grammarAccess.getCompletenessAccess().getDescriptionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Completeness__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Completeness__Group__2__Impl
	rule__Completeness__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Completeness__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getCompletenessAccess().getMissedMethodAssignment_2()); }
(rule__Completeness__MissedMethodAssignment_2)
{ after(grammarAccess.getCompletenessAccess().getMissedMethodAssignment_2()); }
)
(
{ before(grammarAccess.getCompletenessAccess().getMissedMethodAssignment_2()); }
(rule__Completeness__MissedMethodAssignment_2)*
{ after(grammarAccess.getCompletenessAccess().getMissedMethodAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Completeness__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Completeness__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Completeness__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompletenessAccess().getSecurityConstraintAssignment_3()); }
(rule__Completeness__SecurityConstraintAssignment_3)
{ after(grammarAccess.getCompletenessAccess().getSecurityConstraintAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Redundancy__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Redundancy__Group__0__Impl
	rule__Redundancy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Redundancy__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRedundancyAccess().getRedundancyKeyword_0()); }

	'Redundancy' 

{ after(grammarAccess.getRedundancyAccess().getRedundancyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Redundancy__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Redundancy__Group__1__Impl
	rule__Redundancy__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Redundancy__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRedundancyAccess().getDescriptionAssignment_1()); }
(rule__Redundancy__DescriptionAssignment_1)
{ after(grammarAccess.getRedundancyAccess().getDescriptionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Redundancy__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Redundancy__Group__2__Impl
	rule__Redundancy__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Redundancy__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRedundancyAccess().getContainingAssignment_2()); }
(rule__Redundancy__ContainingAssignment_2)
{ after(grammarAccess.getRedundancyAccess().getContainingAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Redundancy__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Redundancy__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Redundancy__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRedundancyAccess().getContainedAssignment_3()); }
(rule__Redundancy__ContainedAssignment_3)
{ after(grammarAccess.getRedundancyAccess().getContainedAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Syntactical__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Syntactical__Group__0__Impl
	rule__Syntactical__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Syntactical__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSyntacticalAccess().getSyntacticalKeyword_0()); }

	'Syntactical' 

{ after(grammarAccess.getSyntacticalAccess().getSyntacticalKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Syntactical__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Syntactical__Group__1__Impl
	rule__Syntactical__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Syntactical__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSyntacticalAccess().getDescriptionAssignment_1()); }
(rule__Syntactical__DescriptionAssignment_1)
{ after(grammarAccess.getSyntacticalAccess().getDescriptionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Syntactical__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Syntactical__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Syntactical__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSyntacticalAccess().getMissedRolesAssignment_2()); }
(rule__Syntactical__MissedRolesAssignment_2)
{ after(grammarAccess.getSyntacticalAccess().getMissedRolesAssignment_2()); }
)
(
{ before(grammarAccess.getSyntacticalAccess().getMissedRolesAssignment_2()); }
(rule__Syntactical__MissedRolesAssignment_2)*
{ after(grammarAccess.getSyntacticalAccess().getMissedRolesAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Reachability__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reachability__Group__0__Impl
	rule__Reachability__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reachability__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReachabilityAccess().getReachabilityKeyword_0()); }

	'Reachability' 

{ after(grammarAccess.getReachabilityAccess().getReachabilityKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reachability__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reachability__Group__1__Impl
	rule__Reachability__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reachability__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReachabilityAccess().getDescriptionAssignment_1()); }
(rule__Reachability__DescriptionAssignment_1)
{ after(grammarAccess.getReachabilityAccess().getDescriptionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reachability__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reachability__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reachability__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getReachabilityAccess().getUnreachableResourcesAssignment_2()); }
(rule__Reachability__UnreachableResourcesAssignment_2)
{ after(grammarAccess.getReachabilityAccess().getUnreachableResourcesAssignment_2()); }
)
(
{ before(grammarAccess.getReachabilityAccess().getUnreachableResourcesAssignment_2()); }
(rule__Reachability__UnreachableResourcesAssignment_2)*
{ after(grammarAccess.getReachabilityAccess().getUnreachableResourcesAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Report__AnomaliesAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReportAccess().getAnomaliesAnomalyParserRuleCall_0()); }
	ruleAnomaly{ after(grammarAccess.getReportAccess().getAnomaliesAnomalyParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Shadowing__DescriptionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShadowingAccess().getDescriptionSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getShadowingAccess().getDescriptionSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Shadowing__ShadowingAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShadowingAccess().getShadowingEObjectCrossReference_2_0()); }
(
{ before(grammarAccess.getShadowingAccess().getShadowingEObjectEStringParserRuleCall_2_0_1()); }
	ruleEString{ after(grammarAccess.getShadowingAccess().getShadowingEObjectEStringParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getShadowingAccess().getShadowingEObjectCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Shadowing__ShadowedAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShadowingAccess().getShadowedEObjectCrossReference_3_0()); }
(
{ before(grammarAccess.getShadowingAccess().getShadowedEObjectEStringParserRuleCall_3_0_1()); }
	ruleEString{ after(grammarAccess.getShadowingAccess().getShadowedEObjectEStringParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getShadowingAccess().getShadowedEObjectCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Completeness__DescriptionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompletenessAccess().getDescriptionSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getCompletenessAccess().getDescriptionSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Completeness__MissedMethodAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompletenessAccess().getMissedMethodEObjectCrossReference_2_0()); }
(
{ before(grammarAccess.getCompletenessAccess().getMissedMethodEObjectEStringParserRuleCall_2_0_1()); }
	ruleEString{ after(grammarAccess.getCompletenessAccess().getMissedMethodEObjectEStringParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getCompletenessAccess().getMissedMethodEObjectCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Completeness__SecurityConstraintAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompletenessAccess().getSecurityConstraintEObjectCrossReference_3_0()); }
(
{ before(grammarAccess.getCompletenessAccess().getSecurityConstraintEObjectEStringParserRuleCall_3_0_1()); }
	ruleEString{ after(grammarAccess.getCompletenessAccess().getSecurityConstraintEObjectEStringParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getCompletenessAccess().getSecurityConstraintEObjectCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Redundancy__DescriptionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRedundancyAccess().getDescriptionSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getRedundancyAccess().getDescriptionSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Redundancy__ContainingAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRedundancyAccess().getContainingEObjectCrossReference_2_0()); }
(
{ before(grammarAccess.getRedundancyAccess().getContainingEObjectEStringParserRuleCall_2_0_1()); }
	ruleEString{ after(grammarAccess.getRedundancyAccess().getContainingEObjectEStringParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getRedundancyAccess().getContainingEObjectCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Redundancy__ContainedAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRedundancyAccess().getContainedEObjectCrossReference_3_0()); }
(
{ before(grammarAccess.getRedundancyAccess().getContainedEObjectEStringParserRuleCall_3_0_1()); }
	ruleEString{ after(grammarAccess.getRedundancyAccess().getContainedEObjectEStringParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getRedundancyAccess().getContainedEObjectCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Syntactical__DescriptionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSyntacticalAccess().getDescriptionSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getSyntacticalAccess().getDescriptionSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Syntactical__MissedRolesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSyntacticalAccess().getMissedRolesEObjectCrossReference_2_0()); }
(
{ before(grammarAccess.getSyntacticalAccess().getMissedRolesEObjectEStringParserRuleCall_2_0_1()); }
	ruleEString{ after(grammarAccess.getSyntacticalAccess().getMissedRolesEObjectEStringParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getSyntacticalAccess().getMissedRolesEObjectCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reachability__DescriptionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReachabilityAccess().getDescriptionSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getReachabilityAccess().getDescriptionSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reachability__UnreachableResourcesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReachabilityAccess().getUnreachableResourcesEObjectCrossReference_2_0()); }
(
{ before(grammarAccess.getReachabilityAccess().getUnreachableResourcesEObjectEStringParserRuleCall_2_0_1()); }
	ruleEString{ after(grammarAccess.getReachabilityAccess().getUnreachableResourcesEObjectEStringParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getReachabilityAccess().getUnreachableResourcesEObjectCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


