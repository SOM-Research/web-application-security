grammar org.xtext.ejbSecurity.EjbSecurity with org.eclipse.xtext.common.Terminals

generate ejbSecurity "http://www.xtext.org/ejbSecurity/EjbSecurity"

Security:
	enterpriseBeans=EnterpriseBeans assemblyDescriptor=AssemblyDescriptor?
;

EnterpriseBeans:
	'enterprise-beans' '{' session+=Session+ '}'
;

Session:
	'session' '{'
	ejbName=EjbName
	ejbClass=EjbClass
	securityRoleRef+=SecurityRoleRef*
	securityIdentity=SecurityIdentity? '}'
;

SecurityRoleRef:
	'security-role-ref' '{'
		(roleNameLink=RoleName roleLink=RoleLink | roleName=[RoleName])
	'}' 
;

RoleLink:
	'role-link' roleName=[RoleName]
;

SecurityIdentity:
	'security-identity' '{'
		(runAs=RunAs | userCallerIdentity=UserCallerIdentity)
	'}'
;

RunAs:
	'run-as' '{' roleName=[RoleName] '}'
;

UserCallerIdentity:
	name='user-caller-identity'  
;

EjbClass:
	'ejb-class' name=STRING
;

AssemblyDescriptor:
	'assembly-descriptor' '{' 
		securityRole+=SecurityRole+ methodPermission+=MethodPermission excludeList=ExcludeList?	
	'}'
;

SecurityRole:
	'security-role' '{' roleName=RoleName '}'
;

RoleName:
	'role-name' name=ID
;

MethodPermission:
	'method-permission' '{' (roleName+=[RoleName]+ | unchecked=Unchecked) method+=Method+'}'
;

Unchecked:
	name='unchecked'
;

ExcludeList:
	'exclude-list' '{'
		method+=Method+
	'}'
;

Method:
	'method' '{' 
		ejbName=[EjbName]
		methodIntf=MethodIntf?
		methodName=STRING
		methodParams=MethodParams?
	'}'
;

EjbName:
	'ebj-name' name=ID
;

MethodIntf:
	'method-intf' type=MethodInfType
;

enum MethodInfType:
	HOME = 'HOME' | REMOTE = 'REMOTE'
;

MethodParams:
	'method-params' '{' 
		methodParam+=MethodParam*
	'}'
;
	
MethodParam:
	'method-param' param=STRING
;

