/*
* generated by Xtext
*/
package org.xtext.example.security.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.example.security.services.SecurityGrammarAccess;

public class SecurityParser extends AbstractContentAssistParser {
	
	@Inject
	private SecurityGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.example.security.ui.contentassist.antlr.internal.InternalSecurityParser createParser() {
		org.xtext.example.security.ui.contentassist.antlr.internal.InternalSecurityParser result = new org.xtext.example.security.ui.contentassist.antlr.internal.InternalSecurityParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getRestrictionTypeAccess().getAlternatives(), "rule__RestrictionType__Alternatives");
					put(grammarAccess.getSecurityAccess().getGroup(), "rule__Security__Group__0");
					put(grammarAccess.getSecurityRoleAccess().getGroup(), "rule__SecurityRole__Group__0");
					put(grammarAccess.getSecurityConstraintAccess().getGroup(), "rule__SecurityConstraint__Group__0");
					put(grammarAccess.getDisplayNameAccess().getGroup(), "rule__DisplayName__Group__0");
					put(grammarAccess.getWebResourceCollectionAccess().getGroup(), "rule__WebResourceCollection__Group__0");
					put(grammarAccess.getUrlPatternAccess().getGroup(), "rule__UrlPattern__Group__0");
					put(grammarAccess.getHttpMethodAccess().getGroup(), "rule__HttpMethod__Group__0");
					put(grammarAccess.getAuthConstraintAccess().getGroup(), "rule__AuthConstraint__Group__0");
					put(grammarAccess.getRoleNameAccess().getGroup(), "rule__RoleName__Group__0");
					put(grammarAccess.getUserDataConstraintAccess().getGroup(), "rule__UserDataConstraint__Group__0");
					put(grammarAccess.getTransportGuaranteeAccess().getGroup(), "rule__TransportGuarantee__Group__0");
					put(grammarAccess.getSecurityAccess().getRoleAssignment_0(), "rule__Security__RoleAssignment_0");
					put(grammarAccess.getSecurityAccess().getConstraintAssignment_1(), "rule__Security__ConstraintAssignment_1");
					put(grammarAccess.getSecurityRoleAccess().getNameAssignment_1(), "rule__SecurityRole__NameAssignment_1");
					put(grammarAccess.getSecurityConstraintAccess().getDisplayNameAssignment_1(), "rule__SecurityConstraint__DisplayNameAssignment_1");
					put(grammarAccess.getSecurityConstraintAccess().getWebResourceCollectionAssignment_2(), "rule__SecurityConstraint__WebResourceCollectionAssignment_2");
					put(grammarAccess.getSecurityConstraintAccess().getAuthConstraintAssignment_3(), "rule__SecurityConstraint__AuthConstraintAssignment_3");
					put(grammarAccess.getSecurityConstraintAccess().getUserDataConstraintAssignment_4(), "rule__SecurityConstraint__UserDataConstraintAssignment_4");
					put(grammarAccess.getSecurityConstraintAccess().getIdAssignment_5(), "rule__SecurityConstraint__IdAssignment_5");
					put(grammarAccess.getIdentifierAccess().getNameAssignment(), "rule__Identifier__NameAssignment");
					put(grammarAccess.getDisplayNameAccess().getValueAssignment_1(), "rule__DisplayName__ValueAssignment_1");
					put(grammarAccess.getWebResourceCollectionAccess().getWebResourceNameAssignment_3(), "rule__WebResourceCollection__WebResourceNameAssignment_3");
					put(grammarAccess.getWebResourceCollectionAccess().getUrlPatternAssignment_4(), "rule__WebResourceCollection__UrlPatternAssignment_4");
					put(grammarAccess.getWebResourceCollectionAccess().getHttpMethodAssignment_5(), "rule__WebResourceCollection__HttpMethodAssignment_5");
					put(grammarAccess.getWebResourceCollectionAccess().getIdAssignment_6(), "rule__WebResourceCollection__IdAssignment_6");
					put(grammarAccess.getUrlPatternAccess().getValueAssignment_1(), "rule__UrlPattern__ValueAssignment_1");
					put(grammarAccess.getHttpMethodAccess().getOmissionAssignment_1(), "rule__HttpMethod__OmissionAssignment_1");
					put(grammarAccess.getHttpMethodAccess().getNameAssignment_2(), "rule__HttpMethod__NameAssignment_2");
					put(grammarAccess.getAuthConstraintAccess().getRoleNameAssignment_2(), "rule__AuthConstraint__RoleNameAssignment_2");
					put(grammarAccess.getAuthConstraintAccess().getIdAssignment_3(), "rule__AuthConstraint__IdAssignment_3");
					put(grammarAccess.getRoleNameAccess().getNameAssignment_1(), "rule__RoleName__NameAssignment_1");
					put(grammarAccess.getUserDataConstraintAccess().getTransportGuaranteeAssignment_2(), "rule__UserDataConstraint__TransportGuaranteeAssignment_2");
					put(grammarAccess.getUserDataConstraintAccess().getIdAssignment_3(), "rule__UserDataConstraint__IdAssignment_3");
					put(grammarAccess.getTransportGuaranteeAccess().getRestrictionAssignment_1(), "rule__TransportGuarantee__RestrictionAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.example.security.ui.contentassist.antlr.internal.InternalSecurityParser typedParser = (org.xtext.example.security.ui.contentassist.antlr.internal.InternalSecurityParser) parser;
			typedParser.entryRuleSecurity();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public SecurityGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(SecurityGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
