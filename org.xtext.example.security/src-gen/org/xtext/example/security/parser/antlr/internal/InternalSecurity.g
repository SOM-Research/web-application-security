/*
* generated by Xtext
*/
grammar InternalSecurity;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.example.security.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.security.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.security.services.SecurityGrammarAccess;

}

@parser::members {

 	private SecurityGrammarAccess grammarAccess;
 	
    public InternalSecurityParser(TokenStream input, SecurityGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Security";	
   	}
   	
   	@Override
   	protected SecurityGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleSecurity
entryRuleSecurity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSecurityRule()); }
	 iv_ruleSecurity=ruleSecurity 
	 { $current=$iv_ruleSecurity.current; } 
	 EOF 
;

// Rule Security
ruleSecurity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSecurityAccess().getRoleSecurityRoleParserRuleCall_0_0()); 
	    }
		lv_role_0_0=ruleSecurityRole		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSecurityRule());
	        }
       		add(
       			$current, 
       			"role",
        		lv_role_0_0, 
        		"SecurityRole");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getSecurityAccess().getConstraintSecurityConstraintParserRuleCall_1_0()); 
	    }
		lv_constraint_1_0=ruleSecurityConstraint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSecurityRule());
	        }
       		add(
       			$current, 
       			"constraint",
        		lv_constraint_1_0, 
        		"SecurityConstraint");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleSecurityRole
entryRuleSecurityRole returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSecurityRoleRule()); }
	 iv_ruleSecurityRole=ruleSecurityRole 
	 { $current=$iv_ruleSecurityRole.current; } 
	 EOF 
;

// Rule SecurityRole
ruleSecurityRole returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='security-role' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSecurityRoleAccess().getSecurityRoleKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSecurityRoleAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSecurityRoleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleSecurityConstraint
entryRuleSecurityConstraint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSecurityConstraintRule()); }
	 iv_ruleSecurityConstraint=ruleSecurityConstraint 
	 { $current=$iv_ruleSecurityConstraint.current; } 
	 EOF 
;

// Rule SecurityConstraint
ruleSecurityConstraint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='security-constraint\r\n    {' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSecurityConstraintAccess().getSecurityConstraintKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSecurityConstraintAccess().getDisplayNameDisplayNameParserRuleCall_1_0()); 
	    }
		lv_displayName_1_0=ruleDisplayName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSecurityConstraintRule());
	        }
       		add(
       			$current, 
       			"displayName",
        		lv_displayName_1_0, 
        		"DisplayName");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getSecurityConstraintAccess().getWebResourceCollectionWebResourceCollectionParserRuleCall_2_0()); 
	    }
		lv_webResourceCollection_2_0=ruleWebResourceCollection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSecurityConstraintRule());
	        }
       		add(
       			$current, 
       			"webResourceCollection",
        		lv_webResourceCollection_2_0, 
        		"WebResourceCollection");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getSecurityConstraintAccess().getAuthConstraintAuthConstraintParserRuleCall_3_0()); 
	    }
		lv_authConstraint_3_0=ruleAuthConstraint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSecurityConstraintRule());
	        }
       		set(
       			$current, 
       			"authConstraint",
        		lv_authConstraint_3_0, 
        		"AuthConstraint");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSecurityConstraintAccess().getUserDataConstraintUserDataConstraintParserRuleCall_4_0()); 
	    }
		lv_userDataConstraint_4_0=ruleUserDataConstraint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSecurityConstraintRule());
	        }
       		set(
       			$current, 
       			"userDataConstraint",
        		lv_userDataConstraint_4_0, 
        		"UserDataConstraint");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSecurityConstraintAccess().getIdIdentifierParserRuleCall_5_0()); 
	    }
		lv_id_5_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSecurityConstraintRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_5_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSecurityConstraintAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleIdentifier
entryRuleIdentifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIdentifierRule()); }
	 iv_ruleIdentifier=ruleIdentifier 
	 { $current=$iv_ruleIdentifier.current; } 
	 EOF 
;

// Rule Identifier
ruleIdentifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getIdentifierAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleDisplayName
entryRuleDisplayName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDisplayNameRule()); }
	 iv_ruleDisplayName=ruleDisplayName 
	 { $current=$iv_ruleDisplayName.current; } 
	 EOF 
;

// Rule DisplayName
ruleDisplayName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='display-name' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDisplayNameAccess().getDisplayNameKeyword_0());
    }
(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getDisplayNameAccess().getValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDisplayNameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleWebResourceCollection
entryRuleWebResourceCollection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWebResourceCollectionRule()); }
	 iv_ruleWebResourceCollection=ruleWebResourceCollection 
	 { $current=$iv_ruleWebResourceCollection.current; } 
	 EOF 
;

// Rule WebResourceCollection
ruleWebResourceCollection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='web-resource-collection' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWebResourceCollectionAccess().getWebResourceCollectionKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getWebResourceCollectionAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='web-resource-name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getWebResourceCollectionAccess().getWebResourceNameKeyword_2());
    }
(
(
		lv_webResourceName_3_0=RULE_STRING
		{
			newLeafNode(lv_webResourceName_3_0, grammarAccess.getWebResourceCollectionAccess().getWebResourceNameSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWebResourceCollectionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"webResourceName",
        		lv_webResourceName_3_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getWebResourceCollectionAccess().getUrlPatternUrlPatternParserRuleCall_4_0()); 
	    }
		lv_urlPattern_4_0=ruleUrlPattern		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWebResourceCollectionRule());
	        }
       		add(
       			$current, 
       			"urlPattern",
        		lv_urlPattern_4_0, 
        		"UrlPattern");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getWebResourceCollectionAccess().getHttpMethodHttpMethodParserRuleCall_5_0()); 
	    }
		lv_httpMethod_5_0=ruleHttpMethod		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWebResourceCollectionRule());
	        }
       		add(
       			$current, 
       			"httpMethod",
        		lv_httpMethod_5_0, 
        		"HttpMethod");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getWebResourceCollectionAccess().getIdIdentifierParserRuleCall_6_0()); 
	    }
		lv_id_6_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWebResourceCollectionRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_6_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getWebResourceCollectionAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleUrlPattern
entryRuleUrlPattern returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUrlPatternRule()); }
	 iv_ruleUrlPattern=ruleUrlPattern 
	 { $current=$iv_ruleUrlPattern.current; } 
	 EOF 
;

// Rule UrlPattern
ruleUrlPattern returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='url-pattern' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUrlPatternAccess().getUrlPatternKeyword_0());
    }
(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getUrlPatternAccess().getValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUrlPatternRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleHttpMethod
entryRuleHttpMethod returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHttpMethodRule()); }
	 iv_ruleHttpMethod=ruleHttpMethod 
	 { $current=$iv_ruleHttpMethod.current; } 
	 EOF 
;

// Rule HttpMethod
ruleHttpMethod returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='http-method' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHttpMethodAccess().getHttpMethodKeyword_0());
    }
(
(
		lv_omission_1_0=	'omission' 
    {
        newLeafNode(lv_omission_1_0, grammarAccess.getHttpMethodAccess().getOmissionOmissionKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHttpMethodRule());
	        }
       		setWithLastConsumed($current, "omission", true, "omission");
	    }

)
)(
(
		lv_name_2_0=RULE_STRING
		{
			newLeafNode(lv_name_2_0, grammarAccess.getHttpMethodAccess().getNameSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHttpMethodRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleAuthConstraint
entryRuleAuthConstraint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAuthConstraintRule()); }
	 iv_ruleAuthConstraint=ruleAuthConstraint 
	 { $current=$iv_ruleAuthConstraint.current; } 
	 EOF 
;

// Rule AuthConstraint
ruleAuthConstraint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='auth-constraint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAuthConstraintAccess().getAuthConstraintKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAuthConstraintAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAuthConstraintAccess().getRoleNameRoleNameParserRuleCall_2_0()); 
	    }
		lv_roleName_2_0=ruleRoleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAuthConstraintRule());
	        }
       		add(
       			$current, 
       			"roleName",
        		lv_roleName_2_0, 
        		"RoleName");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getAuthConstraintAccess().getIdIdentifierParserRuleCall_3_0()); 
	    }
		lv_id_3_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAuthConstraintRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_3_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAuthConstraintAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleRoleName
entryRuleRoleName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRoleNameRule()); }
	 iv_ruleRoleName=ruleRoleName 
	 { $current=$iv_ruleRoleName.current; } 
	 EOF 
;

// Rule RoleName
ruleRoleName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='role-name' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRoleNameAccess().getRoleNameKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRoleNameRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getRoleNameAccess().getNameSecurityRoleCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleUserDataConstraint
entryRuleUserDataConstraint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUserDataConstraintRule()); }
	 iv_ruleUserDataConstraint=ruleUserDataConstraint 
	 { $current=$iv_ruleUserDataConstraint.current; } 
	 EOF 
;

// Rule UserDataConstraint
ruleUserDataConstraint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='user-data-constraint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUserDataConstraintAccess().getUserDataConstraintKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUserDataConstraintAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUserDataConstraintAccess().getTransportGuaranteeTransportGuaranteeParserRuleCall_2_0()); 
	    }
		lv_transportGuarantee_2_0=ruleTransportGuarantee		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserDataConstraintRule());
	        }
       		set(
       			$current, 
       			"transportGuarantee",
        		lv_transportGuarantee_2_0, 
        		"TransportGuarantee");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUserDataConstraintAccess().getIdIdentifierParserRuleCall_3_0()); 
	    }
		lv_id_3_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserDataConstraintRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_3_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUserDataConstraintAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleTransportGuarantee
entryRuleTransportGuarantee returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTransportGuaranteeRule()); }
	 iv_ruleTransportGuarantee=ruleTransportGuarantee 
	 { $current=$iv_ruleTransportGuarantee.current; } 
	 EOF 
;

// Rule TransportGuarantee
ruleTransportGuarantee returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='transport-guarantee' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTransportGuaranteeAccess().getTransportGuaranteeKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTransportGuaranteeAccess().getRestrictionRestrictionTypeEnumRuleCall_1_0()); 
	    }
		lv_restriction_1_0=ruleRestrictionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTransportGuaranteeRule());
	        }
       		set(
       			$current, 
       			"restriction",
        		lv_restriction_1_0, 
        		"RestrictionType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Rule RestrictionType
ruleRestrictionType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='NONE' 
	{
        $current = grammarAccess.getRestrictionTypeAccess().getNONEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getRestrictionTypeAccess().getNONEEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='INTEGRAL' 
	{
        $current = grammarAccess.getRestrictionTypeAccess().getINTEGRALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getRestrictionTypeAccess().getINTEGRALEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='CONFIDENTIAL' 
	{
        $current = grammarAccess.getRestrictionTypeAccess().getCONFIDENTIALEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getRestrictionTypeAccess().getCONFIDENTIALEnumLiteralDeclaration_2()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


