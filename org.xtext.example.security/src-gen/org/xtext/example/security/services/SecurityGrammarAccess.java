/*
* generated by Xtext
*/
package org.xtext.example.security.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class SecurityGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class SecurityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Security");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cRoleAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cRoleSecurityRoleParserRuleCall_0_0 = (RuleCall)cRoleAssignment_0.eContents().get(0);
		private final Assignment cConstraintAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cConstraintSecurityConstraintParserRuleCall_1_0 = (RuleCall)cConstraintAssignment_1.eContents().get(0);
		
		//Security:
		//	role+=SecurityRole* constraint+=SecurityConstraint*;
		public ParserRule getRule() { return rule; }

		//role+=SecurityRole* constraint+=SecurityConstraint*
		public Group getGroup() { return cGroup; }

		//role+=SecurityRole*
		public Assignment getRoleAssignment_0() { return cRoleAssignment_0; }

		//SecurityRole
		public RuleCall getRoleSecurityRoleParserRuleCall_0_0() { return cRoleSecurityRoleParserRuleCall_0_0; }

		//constraint+=SecurityConstraint*
		public Assignment getConstraintAssignment_1() { return cConstraintAssignment_1; }

		//SecurityConstraint
		public RuleCall getConstraintSecurityConstraintParserRuleCall_1_0() { return cConstraintSecurityConstraintParserRuleCall_1_0; }
	}

	public class SecurityRoleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SecurityRole");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSecurityRoleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//SecurityRole:
		//	"security-role" name=ID;
		public ParserRule getRule() { return rule; }

		//"security-role" name=ID
		public Group getGroup() { return cGroup; }

		//"security-role"
		public Keyword getSecurityRoleKeyword_0() { return cSecurityRoleKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class SecurityConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SecurityConstraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSecurityConstraintKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDisplayNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDisplayNameDisplayNameParserRuleCall_1_0 = (RuleCall)cDisplayNameAssignment_1.eContents().get(0);
		private final Assignment cWebResourceCollectionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cWebResourceCollectionWebResourceCollectionParserRuleCall_2_0 = (RuleCall)cWebResourceCollectionAssignment_2.eContents().get(0);
		private final Assignment cAuthConstraintAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAuthConstraintAuthConstraintParserRuleCall_3_0 = (RuleCall)cAuthConstraintAssignment_3.eContents().get(0);
		private final Assignment cUserDataConstraintAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cUserDataConstraintUserDataConstraintParserRuleCall_4_0 = (RuleCall)cUserDataConstraintAssignment_4.eContents().get(0);
		private final Assignment cIdAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cIdIdentifierParserRuleCall_5_0 = (RuleCall)cIdAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//SecurityConstraint:
		//	"security-constraint\r\n    {" displayName+=DisplayName* webResourceCollection+=WebResourceCollection+
		//	authConstraint=AuthConstraint? userDataConstraint=UserDataConstraint? id=Identifier? "}";
		public ParserRule getRule() { return rule; }

		//"security-constraint\r\n    {" displayName+=DisplayName* webResourceCollection+=WebResourceCollection+
		//authConstraint=AuthConstraint? userDataConstraint=UserDataConstraint? id=Identifier? "}"
		public Group getGroup() { return cGroup; }

		//"security-constraint\r\n    {"
		public Keyword getSecurityConstraintKeyword_0() { return cSecurityConstraintKeyword_0; }

		//displayName+=DisplayName*
		public Assignment getDisplayNameAssignment_1() { return cDisplayNameAssignment_1; }

		//DisplayName
		public RuleCall getDisplayNameDisplayNameParserRuleCall_1_0() { return cDisplayNameDisplayNameParserRuleCall_1_0; }

		//webResourceCollection+=WebResourceCollection+
		public Assignment getWebResourceCollectionAssignment_2() { return cWebResourceCollectionAssignment_2; }

		//WebResourceCollection
		public RuleCall getWebResourceCollectionWebResourceCollectionParserRuleCall_2_0() { return cWebResourceCollectionWebResourceCollectionParserRuleCall_2_0; }

		//authConstraint=AuthConstraint?
		public Assignment getAuthConstraintAssignment_3() { return cAuthConstraintAssignment_3; }

		//AuthConstraint
		public RuleCall getAuthConstraintAuthConstraintParserRuleCall_3_0() { return cAuthConstraintAuthConstraintParserRuleCall_3_0; }

		//userDataConstraint=UserDataConstraint?
		public Assignment getUserDataConstraintAssignment_4() { return cUserDataConstraintAssignment_4; }

		//UserDataConstraint
		public RuleCall getUserDataConstraintUserDataConstraintParserRuleCall_4_0() { return cUserDataConstraintUserDataConstraintParserRuleCall_4_0; }

		//id=Identifier?
		public Assignment getIdAssignment_5() { return cIdAssignment_5; }

		//Identifier
		public RuleCall getIdIdentifierParserRuleCall_5_0() { return cIdIdentifierParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class IdentifierElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Identifier");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Identifier:
		//	name=ID;
		public ParserRule getRule() { return rule; }

		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}

	public class DisplayNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DisplayName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDisplayNameKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		
		//DisplayName:
		//	"display-name" value=STRING;
		public ParserRule getRule() { return rule; }

		//"display-name" value=STRING
		public Group getGroup() { return cGroup; }

		//"display-name"
		public Keyword getDisplayNameKeyword_0() { return cDisplayNameKeyword_0; }

		//value=STRING
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_1_0() { return cValueSTRINGTerminalRuleCall_1_0; }
	}

	public class WebResourceCollectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "WebResourceCollection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWebResourceCollectionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cWebResourceNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cWebResourceNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cWebResourceNameSTRINGTerminalRuleCall_3_0 = (RuleCall)cWebResourceNameAssignment_3.eContents().get(0);
		private final Assignment cUrlPatternAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cUrlPatternUrlPatternParserRuleCall_4_0 = (RuleCall)cUrlPatternAssignment_4.eContents().get(0);
		private final Assignment cHttpMethodAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cHttpMethodHttpMethodParserRuleCall_5_0 = (RuleCall)cHttpMethodAssignment_5.eContents().get(0);
		private final Assignment cIdAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cIdIdentifierParserRuleCall_6_0 = (RuleCall)cIdAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//WebResourceCollection:
		//	"web-resource-collection" "{" "web-resource-name" webResourceName=STRING urlPattern+=UrlPattern*
		//	httpMethod+=HttpMethod* id=Identifier? "}";
		public ParserRule getRule() { return rule; }

		//"web-resource-collection" "{" "web-resource-name" webResourceName=STRING urlPattern+=UrlPattern* httpMethod+=HttpMethod*
		//id=Identifier? "}"
		public Group getGroup() { return cGroup; }

		//"web-resource-collection"
		public Keyword getWebResourceCollectionKeyword_0() { return cWebResourceCollectionKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"web-resource-name"
		public Keyword getWebResourceNameKeyword_2() { return cWebResourceNameKeyword_2; }

		//webResourceName=STRING
		public Assignment getWebResourceNameAssignment_3() { return cWebResourceNameAssignment_3; }

		//STRING
		public RuleCall getWebResourceNameSTRINGTerminalRuleCall_3_0() { return cWebResourceNameSTRINGTerminalRuleCall_3_0; }

		//urlPattern+=UrlPattern*
		public Assignment getUrlPatternAssignment_4() { return cUrlPatternAssignment_4; }

		//UrlPattern
		public RuleCall getUrlPatternUrlPatternParserRuleCall_4_0() { return cUrlPatternUrlPatternParserRuleCall_4_0; }

		//httpMethod+=HttpMethod*
		public Assignment getHttpMethodAssignment_5() { return cHttpMethodAssignment_5; }

		//HttpMethod
		public RuleCall getHttpMethodHttpMethodParserRuleCall_5_0() { return cHttpMethodHttpMethodParserRuleCall_5_0; }

		//id=Identifier?
		public Assignment getIdAssignment_6() { return cIdAssignment_6; }

		//Identifier
		public RuleCall getIdIdentifierParserRuleCall_6_0() { return cIdIdentifierParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class UrlPatternElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UrlPattern");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUrlPatternKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		
		//UrlPattern:
		//	"url-pattern" value=STRING;
		public ParserRule getRule() { return rule; }

		//"url-pattern" value=STRING
		public Group getGroup() { return cGroup; }

		//"url-pattern"
		public Keyword getUrlPatternKeyword_0() { return cUrlPatternKeyword_0; }

		//value=STRING
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_1_0() { return cValueSTRINGTerminalRuleCall_1_0; }
	}

	public class HttpMethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HttpMethod");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHttpMethodKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOmissionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cOmissionOmissionKeyword_1_0 = (Keyword)cOmissionAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//HttpMethod:
		//	"http-method" omission?="omission" name=STRING;
		public ParserRule getRule() { return rule; }

		//"http-method" omission?="omission" name=STRING
		public Group getGroup() { return cGroup; }

		//"http-method"
		public Keyword getHttpMethodKeyword_0() { return cHttpMethodKeyword_0; }

		//omission?="omission"
		public Assignment getOmissionAssignment_1() { return cOmissionAssignment_1; }

		//"omission"
		public Keyword getOmissionOmissionKeyword_1_0() { return cOmissionOmissionKeyword_1_0; }

		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
	}

	public class AuthConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AuthConstraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAuthConstraintKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRoleNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRoleNameRoleNameParserRuleCall_2_0 = (RuleCall)cRoleNameAssignment_2.eContents().get(0);
		private final Assignment cIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIdIdentifierParserRuleCall_3_0 = (RuleCall)cIdAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//AuthConstraint:
		//	"auth-constraint" "{" roleName+=RoleName* id=Identifier? "}";
		public ParserRule getRule() { return rule; }

		//"auth-constraint" "{" roleName+=RoleName* id=Identifier? "}"
		public Group getGroup() { return cGroup; }

		//"auth-constraint"
		public Keyword getAuthConstraintKeyword_0() { return cAuthConstraintKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//roleName+=RoleName*
		public Assignment getRoleNameAssignment_2() { return cRoleNameAssignment_2; }

		//RoleName
		public RuleCall getRoleNameRoleNameParserRuleCall_2_0() { return cRoleNameRoleNameParserRuleCall_2_0; }

		//id=Identifier?
		public Assignment getIdAssignment_3() { return cIdAssignment_3; }

		//Identifier
		public RuleCall getIdIdentifierParserRuleCall_3_0() { return cIdIdentifierParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class RoleNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RoleName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRoleNameKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cNameSecurityRoleCrossReference_1_0 = (CrossReference)cNameAssignment_1.eContents().get(0);
		private final RuleCall cNameSecurityRoleIDTerminalRuleCall_1_0_1 = (RuleCall)cNameSecurityRoleCrossReference_1_0.eContents().get(1);
		
		//RoleName:
		//	"role-name" name=[SecurityRole];
		public ParserRule getRule() { return rule; }

		//"role-name" name=[SecurityRole]
		public Group getGroup() { return cGroup; }

		//"role-name"
		public Keyword getRoleNameKeyword_0() { return cRoleNameKeyword_0; }

		//name=[SecurityRole]
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//[SecurityRole]
		public CrossReference getNameSecurityRoleCrossReference_1_0() { return cNameSecurityRoleCrossReference_1_0; }

		//ID
		public RuleCall getNameSecurityRoleIDTerminalRuleCall_1_0_1() { return cNameSecurityRoleIDTerminalRuleCall_1_0_1; }
	}

	public class UserDataConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UserDataConstraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUserDataConstraintKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTransportGuaranteeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTransportGuaranteeTransportGuaranteeParserRuleCall_2_0 = (RuleCall)cTransportGuaranteeAssignment_2.eContents().get(0);
		private final Assignment cIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIdIdentifierParserRuleCall_3_0 = (RuleCall)cIdAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//UserDataConstraint:
		//	"user-data-constraint" "{" transportGuarantee=TransportGuarantee id=Identifier? "}";
		public ParserRule getRule() { return rule; }

		//"user-data-constraint" "{" transportGuarantee=TransportGuarantee id=Identifier? "}"
		public Group getGroup() { return cGroup; }

		//"user-data-constraint"
		public Keyword getUserDataConstraintKeyword_0() { return cUserDataConstraintKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//transportGuarantee=TransportGuarantee
		public Assignment getTransportGuaranteeAssignment_2() { return cTransportGuaranteeAssignment_2; }

		//TransportGuarantee
		public RuleCall getTransportGuaranteeTransportGuaranteeParserRuleCall_2_0() { return cTransportGuaranteeTransportGuaranteeParserRuleCall_2_0; }

		//id=Identifier?
		public Assignment getIdAssignment_3() { return cIdAssignment_3; }

		//Identifier
		public RuleCall getIdIdentifierParserRuleCall_3_0() { return cIdIdentifierParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class TransportGuaranteeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TransportGuarantee");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTransportGuaranteeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRestrictionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cRestrictionRestrictionTypeEnumRuleCall_1_0 = (RuleCall)cRestrictionAssignment_1.eContents().get(0);
		
		//TransportGuarantee:
		//	"transport-guarantee" restriction=RestrictionType;
		public ParserRule getRule() { return rule; }

		//"transport-guarantee" restriction=RestrictionType
		public Group getGroup() { return cGroup; }

		//"transport-guarantee"
		public Keyword getTransportGuaranteeKeyword_0() { return cTransportGuaranteeKeyword_0; }

		//restriction=RestrictionType
		public Assignment getRestrictionAssignment_1() { return cRestrictionAssignment_1; }

		//RestrictionType
		public RuleCall getRestrictionRestrictionTypeEnumRuleCall_1_0() { return cRestrictionRestrictionTypeEnumRuleCall_1_0; }
	}
	
	
	public class RestrictionTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "RestrictionType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cNONEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cNONENONEKeyword_0_0 = (Keyword)cNONEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cINTEGRALEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cINTEGRALINTEGRALKeyword_1_0 = (Keyword)cINTEGRALEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCONFIDENTIALEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCONFIDENTIALCONFIDENTIALKeyword_2_0 = (Keyword)cCONFIDENTIALEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum RestrictionType:
		//	NONE | INTEGRAL | CONFIDENTIAL;
		public EnumRule getRule() { return rule; }

		//NONE | INTEGRAL | CONFIDENTIAL
		public Alternatives getAlternatives() { return cAlternatives; }

		//NONE
		public EnumLiteralDeclaration getNONEEnumLiteralDeclaration_0() { return cNONEEnumLiteralDeclaration_0; }

		//"NONE"
		public Keyword getNONENONEKeyword_0_0() { return cNONENONEKeyword_0_0; }

		//INTEGRAL
		public EnumLiteralDeclaration getINTEGRALEnumLiteralDeclaration_1() { return cINTEGRALEnumLiteralDeclaration_1; }

		//"INTEGRAL"
		public Keyword getINTEGRALINTEGRALKeyword_1_0() { return cINTEGRALINTEGRALKeyword_1_0; }

		//CONFIDENTIAL
		public EnumLiteralDeclaration getCONFIDENTIALEnumLiteralDeclaration_2() { return cCONFIDENTIALEnumLiteralDeclaration_2; }

		//"CONFIDENTIAL"
		public Keyword getCONFIDENTIALCONFIDENTIALKeyword_2_0() { return cCONFIDENTIALCONFIDENTIALKeyword_2_0; }
	}
	
	private SecurityElements pSecurity;
	private SecurityRoleElements pSecurityRole;
	private SecurityConstraintElements pSecurityConstraint;
	private IdentifierElements pIdentifier;
	private DisplayNameElements pDisplayName;
	private WebResourceCollectionElements pWebResourceCollection;
	private UrlPatternElements pUrlPattern;
	private HttpMethodElements pHttpMethod;
	private AuthConstraintElements pAuthConstraint;
	private RoleNameElements pRoleName;
	private UserDataConstraintElements pUserDataConstraint;
	private TransportGuaranteeElements pTransportGuarantee;
	private RestrictionTypeElements unknownRuleRestrictionType;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public SecurityGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.security.Security".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Security:
	//	role+=SecurityRole* constraint+=SecurityConstraint*;
	public SecurityElements getSecurityAccess() {
		return (pSecurity != null) ? pSecurity : (pSecurity = new SecurityElements());
	}
	
	public ParserRule getSecurityRule() {
		return getSecurityAccess().getRule();
	}

	//SecurityRole:
	//	"security-role" name=ID;
	public SecurityRoleElements getSecurityRoleAccess() {
		return (pSecurityRole != null) ? pSecurityRole : (pSecurityRole = new SecurityRoleElements());
	}
	
	public ParserRule getSecurityRoleRule() {
		return getSecurityRoleAccess().getRule();
	}

	//SecurityConstraint:
	//	"security-constraint\r\n    {" displayName+=DisplayName* webResourceCollection+=WebResourceCollection+
	//	authConstraint=AuthConstraint? userDataConstraint=UserDataConstraint? id=Identifier? "}";
	public SecurityConstraintElements getSecurityConstraintAccess() {
		return (pSecurityConstraint != null) ? pSecurityConstraint : (pSecurityConstraint = new SecurityConstraintElements());
	}
	
	public ParserRule getSecurityConstraintRule() {
		return getSecurityConstraintAccess().getRule();
	}

	//Identifier:
	//	name=ID;
	public IdentifierElements getIdentifierAccess() {
		return (pIdentifier != null) ? pIdentifier : (pIdentifier = new IdentifierElements());
	}
	
	public ParserRule getIdentifierRule() {
		return getIdentifierAccess().getRule();
	}

	//DisplayName:
	//	"display-name" value=STRING;
	public DisplayNameElements getDisplayNameAccess() {
		return (pDisplayName != null) ? pDisplayName : (pDisplayName = new DisplayNameElements());
	}
	
	public ParserRule getDisplayNameRule() {
		return getDisplayNameAccess().getRule();
	}

	//WebResourceCollection:
	//	"web-resource-collection" "{" "web-resource-name" webResourceName=STRING urlPattern+=UrlPattern*
	//	httpMethod+=HttpMethod* id=Identifier? "}";
	public WebResourceCollectionElements getWebResourceCollectionAccess() {
		return (pWebResourceCollection != null) ? pWebResourceCollection : (pWebResourceCollection = new WebResourceCollectionElements());
	}
	
	public ParserRule getWebResourceCollectionRule() {
		return getWebResourceCollectionAccess().getRule();
	}

	//UrlPattern:
	//	"url-pattern" value=STRING;
	public UrlPatternElements getUrlPatternAccess() {
		return (pUrlPattern != null) ? pUrlPattern : (pUrlPattern = new UrlPatternElements());
	}
	
	public ParserRule getUrlPatternRule() {
		return getUrlPatternAccess().getRule();
	}

	//HttpMethod:
	//	"http-method" omission?="omission" name=STRING;
	public HttpMethodElements getHttpMethodAccess() {
		return (pHttpMethod != null) ? pHttpMethod : (pHttpMethod = new HttpMethodElements());
	}
	
	public ParserRule getHttpMethodRule() {
		return getHttpMethodAccess().getRule();
	}

	//AuthConstraint:
	//	"auth-constraint" "{" roleName+=RoleName* id=Identifier? "}";
	public AuthConstraintElements getAuthConstraintAccess() {
		return (pAuthConstraint != null) ? pAuthConstraint : (pAuthConstraint = new AuthConstraintElements());
	}
	
	public ParserRule getAuthConstraintRule() {
		return getAuthConstraintAccess().getRule();
	}

	//RoleName:
	//	"role-name" name=[SecurityRole];
	public RoleNameElements getRoleNameAccess() {
		return (pRoleName != null) ? pRoleName : (pRoleName = new RoleNameElements());
	}
	
	public ParserRule getRoleNameRule() {
		return getRoleNameAccess().getRule();
	}

	//UserDataConstraint:
	//	"user-data-constraint" "{" transportGuarantee=TransportGuarantee id=Identifier? "}";
	public UserDataConstraintElements getUserDataConstraintAccess() {
		return (pUserDataConstraint != null) ? pUserDataConstraint : (pUserDataConstraint = new UserDataConstraintElements());
	}
	
	public ParserRule getUserDataConstraintRule() {
		return getUserDataConstraintAccess().getRule();
	}

	//TransportGuarantee:
	//	"transport-guarantee" restriction=RestrictionType;
	public TransportGuaranteeElements getTransportGuaranteeAccess() {
		return (pTransportGuarantee != null) ? pTransportGuarantee : (pTransportGuarantee = new TransportGuaranteeElements());
	}
	
	public ParserRule getTransportGuaranteeRule() {
		return getTransportGuaranteeAccess().getRule();
	}

	//enum RestrictionType:
	//	NONE | INTEGRAL | CONFIDENTIAL;
	public RestrictionTypeElements getRestrictionTypeAccess() {
		return (unknownRuleRestrictionType != null) ? unknownRuleRestrictionType : (unknownRuleRestrictionType = new RestrictionTypeElements());
	}
	
	public EnumRule getRestrictionTypeRule() {
		return getRestrictionTypeAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
